<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use Illuminate\Http\Request;

class {{ class }} extends Controller
{

   public function __construct() {
      // $this->middleware('', [ 'except' => [  ] ]);
   }

   /**
   * Display a listing of the resource.
   *
   * @return \Illuminate\Http\Response
   */
   public function index(Request $request)
   {
      return view("{{ modelVariable }}/index", [
         '{{ modelVariable }}' => ${{ modelVariable }},
      ]);
   }

   /**
   * Show the form for creating a new resource.
   *
   * @return \Illuminate\Http\Response
   */
   public function create(Request $request)
   {
      ${{ modelVariable }} = new {{ model }};
      return view("{{ modelVariable }}/create", [
         '{{ modelVariable }}' => ${{ modelVariable }},
      ]);
   }

   /**
   * Store a newly created resource in storage.
   *
   * @param  \Illuminate\Http\Request  $request
   * @return \Illuminate\Http\Response
   */
   public function store(Request $request)
   {
      $inputs = $request->validated();
      try {
         ${{ modelVariable }} = {{ model }}::create($inputs);
         return redirect()->back()->withSuccess(
               __('resource-stored', [ 'name' => '{{ modelVariable }}' ])
         );
      } catch(\Throwable $th) {
         return redirect()->back()->withException($th);
      }
   }

   /**
   * Display the specified resource.
   *
   * @param  \{{ namespacedModel }}  ${{ modelVariable }}
   * @return \Illuminate\Http\Response
   */
   public function show(Request $request, {{ model }} ${{ modelVariable }})
   {
      // load anything.
      return view("{{ modelVariable }}/show", [
         '{{ modelVariable }}' => ${{ modelVariable }},
      ]);
   }

   /**
   * Show the form for editing the specified resource.
   *
   * @param  \{{ namespacedModel }}  ${{ modelVariable }}
   * @return \Illuminate\Http\Response
   */
   public function edit(Request $request, {{ model }} ${{ modelVariable }})
   {
      // load anything.
      return view("{{ modelVariable }}/edit", [
         '{{ modelVariable }}' => ${{ modelVariable }},
      ]);
   }

   /**
   * Update the specified resource in storage.
   *
   * @param  \Illuminate\Http\Request  $request
   * @param  \{{ namespacedModel }}  ${{ modelVariable }}
   * @return \Illuminate\Http\Response
   */
   public function update(Request $request, {{ model }} ${{ modelVariable }})
   {
      $inputs = $request->validated();
      try {
         ${{ modelVariable }}->update($inputs);
         return redirect()->back()->withSuccess(
               __('resource-updated', [ 'name' => '{{ modelVariable }}' ])
         );
      } catch(\Throwable $th) {
         return redirect()->back()->withException($th);
      }
   }

   /**
   * Remove the specified resource from storage.
   *
   * @param  \{{ namespacedModel }}  ${{ modelVariable }}
   * @return \Illuminate\Http\Response
   */
   public function destroy({{ model }} ${{ modelVariable }})
   {
      try {
         ${{ modelVariable }}->delete();
         return redirect()->back()->withSuccess(
               __('resource-deleted', [ 'name' => '{{ modelVariable }}' ])
         );
      } catch(\Throwable $th) {
         return redirect()->back()->withException($th);
      }
   }
}
